#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8           &kp N9             &kp N0    &kp BACKSPACE
&kp TAB         &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I            &kp O              &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K            &kp L              &kp SEMI  &kp SQT
&kp LCTRL       &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA        &kp DOT            &kp FSLH  &kp RIGHT_BRACKET
&kp C_MUTE      &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp ENTER  &mo 2   &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp CLCK
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_4 {
            display-name = "layer1";
            bindings = <
&kp GRAVE     &kp F1                &kp F2                 &kp F3            &kp F4             &kp F5              &mmv MOVE_UP     &kp F6          &kp F7          &kp F8        &kp F9       &kp F10    &trans
&kp CAPSLOCK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE            &mmv MOVE_DOWN   &kp UNDER       &kp MINUS       &kp PLUS      &kp PERCENT  &kp EQUAL  &kp NON_US_BACKSLASH
&trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GREATER_THAN    &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT    &kp COLON  &kp RIGHT_SHIFT
&trans        &trans                &trans                 &kp PIPE          &kt GREATER_THAN   &kp LESS_THAN       &mmv MOVE_RIGHT  &mkp MB1        &mkp MB2        &kp F11       &kp F12      &kp HOME   &kp END
&kp C_MUTE    &trans                &trans                 &trans            &trans             &trans              &mkp LCLK        &trans          &trans          &trans        &trans       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)    &mmv MOVE_UP     &trans          &trans          &trans         &trans           &trans     &trans
&kp TAB    &kp LC(LS(E))     &kp LS(LA(E))     &trans            &trans            &trans              &mmv MOVE_DOWN   &trans          &trans          &kt LC(LS(I))  &trans           &kp UNDER  &kp PLUS
&trans     &kp LC(LS(A))     &trans            &trans            &trans            &trans              &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp LBRC   &kp RBRC
&trans     &kp LC(Z)         &trans            &kp LC(C)         &kp LC(V)         &trans              &mmv MOVE_RIGHT  &trans          &kp LC(M)       &trans         &trans           &trans     &trans
&trans     &trans            &trans            &trans            &trans            &trans              &mkp LCLK        &trans          &trans          &trans         &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
