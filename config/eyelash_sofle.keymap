#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        pipe: pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp GT>;
            label = "PIPE";
        };

        map: map {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PRCNT &kp LEFT_BRACE>;
            label = "MAP";
        };

        fn_js: fn_js {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "fn_js";
        };

        fn_ex: fn_ex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "FN_EX";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8     &kp N9             &kp N0    &kp BACKSPACE
&kp TAB         &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I      &kp O              &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K      &kp L              &kp SEMI  &kp SQT
&kp LCTRL       &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA  &kp DOT            &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE      &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp ENTER  &mo 2   &kp SPACE  &kp RIGHT_CONTROL  &kp CLCK
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_4 {
            display-name = "layer1";
            bindings = <
&kp GRAVE     &kp LS(EXCL)    &kp LS(AT)     &kp LS(POUND)     &kp LS(DLLR)       &kp LS(PRCNT)    &mmv MOVE_UP     &kp LS(CARET)   &kp LS(AMPS)    &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)    &trans
&kp CAPSLOCK  &kp MINUS       &kp EQUAL      &kp PLUS          &kp MINUS          &kp EQUAL        &kp ESC          &pipe           &map            &kp LS(LBRC)  &kp LS(RBRC)  &kp UNDERSCORE  &kp EQUAL
&trans        &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &fn_ex           &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT     &kp COLON       &kp PIPE
&trans        &trans          &kp LESS_THAN  &kp LS(GT)        &kp LS(PIPE)       &fn_js           &mmv MOVE_RIGHT  &mkp MB1        &mkp MB2        &kp LS(LT)    &kp LS(GT)    &trans          &kp RIGHT_SHIFT
&kp C_MUTE    &trans          &trans         &trans            &trans             &trans           &mkp LCLK        &trans          &trans          &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &kp F1         &kp F2         &kp F3     &kp F4     &kp F5       &mmv MOVE_UP     &kp F6          &kp F7          &kp F8         &kp F9           &kp F10    &kp F11
&kp TAB    &kp LC(LS(E))  &kp LS(LA(E))  &kp LC(D)  &kp LC(U)  &kp PG_UP    &mmv MOVE_DOWN   &trans          &trans          &kt LC(LS(I))  &trans           &kp UNDER  &kp F12
&trans     &kp LC(LS(A))  &trans         &kp N      &kp LS(N)  &kp PG_DN    &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp LBRC   &kp RBRC
&trans     &kp LC(Z)      &trans         &kp LC(C)  &kp LC(V)  &trans       &mmv MOVE_RIGHT  &trans          &kp LC(M)       &trans         &trans           &trans     &trans
&to 3      &trans         &trans         &trans     &trans     &trans       &mkp LCLK        &trans          &trans          &trans         &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans           &trans          &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans          &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans          &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&to 0   &trans           &trans          &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
